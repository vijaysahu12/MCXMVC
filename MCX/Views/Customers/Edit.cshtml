@model MCX.Models.Tables.Customers

@{
    ViewBag.Title = "Edit";
}

<link href="~/Content/Custom.css" rel="stylesheet" />
<div class="container-fluid">

    <div class="body-content">
        <div class="row">
            <div class="col-md-10">
                <h2>Edit @{ var typ = @Model.CustomerType == "L" ? "Lead" : "Potential"; } @typ</h2>
            </div>
            <div class="col-md-2">
                <div style="margin-top:25px;" class="pull-right">
                    @Html.ActionLink("Back to List", "Index", "Customer", new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CustomerID)




            <div class="clearfix"></div>
            <div class="form-group col-lg-6">
                <label class="control-label col-md-3">Owner Name</label>
                <div class="col-md-9">
                    @*@Html.EditorFor(model => model.LeadOwnerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LeadOwnerName, "", new { @class = "text-danger" })*@


                    @Html.DropDownList("LeadOwner", (IEnumerable<SelectListItem>)ViewBag.LeadOwnerList, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group col-lg-6">
                <label class="control-label col-md-3">Due Date</label>
                <div class="col-md-9">
                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control requiredFields" } })
                </div>
            </div>

            <div class="clearfix"></div>



            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })

                <div class="col-md-12">
                    <div style="padding-right:0px!important;" class="col-md-2 col-lg-offset-0 col-lg-pull-0">
                        <select class="dropdown form-control">
                            <option value="Mr.">Mr.</option>
                            <option value="Mrs.">Mrs.</option>
                            <option value="Ms.">Ms.</option>
                            <option value="Dr.">Dr.</option>
                            <option value="Prof.">Prof.</option>
                        </select>
                    </div>
                    <div class="" style="padding-right: 0px ! important; padding-left:0px; width: 199px;">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control requiredFields" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.LeadStatusId, "Lead Status", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("LeadStatusId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LeadStatusId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.LeadSourceId, "Lead Source", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("LeadSourceId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LeadSourceId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.ProductId, "Product", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.StageId, "Stage", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownList("StageId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StageId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.FollowUp, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FollowUp)
                        @Html.ValidationMessageFor(model => model.FollowUp, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3 requiredFields" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-lg-6">
                @Html.LabelFor(model => model.Investmentid, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Investmentid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Investmentid, "", new { @class = "text-danger" })
                </div>
            </div>


            @Html.HiddenFor(mode => mode.ConvertToPotential)
            <div class="clearfix"></div>

            <hr />
            <div class="form-group  col-lg-6">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group  col-lg-6">
                @Html.LabelFor(model => model.NewDescription, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-6">

                    @Html.TextAreaFor(model => model.NewDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewDescription, "", new { @class = "text-danger" })
                </div>
                @*<div class="col-md-3"><button id="addDescription" class=" btn btn-primary glyphicon glyphicon-plus">Add Description</button></div>*@
            </div>
        </div>
        <div class="row pull-right">
            <div class="form-group col-lg-12">
                <input type="submit" value="Update" class="btn btn-primary" />
                <input type="submit" onclick="ConvertLeadToPotential();" value="Update & Convert" class="btn btn-primary" />
            </div>
        </div>


    }


</div>

<link href="~/Scripts/DateTimePicker/jquery.datetimepicker.css" rel="stylesheet" />
<script src="~/Scripts/DateTimePicker/jquery.datetimepicker.js"></script>

<script>
    $(document).ready(function () {
        $(":text,number").addClass("form-control");


        if ($("#Description").val().length > 0) {
            $("#Description").attr("readonly", "readonly");
        }

        $("#addDescription").click(function () {

        });

        $("#DueDate").datetimepicker({
            timepicker: false,
            format: 'm/d/Y'
        });

    });

    function ConvertLeadToPotential() {
        $("#ConvertToPotential").val(1);
        return true;
    }
</script>
