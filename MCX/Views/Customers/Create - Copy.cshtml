@model MCX.Models.Tables.Customers

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row col-lg-12 col-md-12 col-sm-12">
        <h4>Customers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-lg-6 col-md-12 col-xs-12  col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12  col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12 col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.LeadOwner, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LeadOwner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeadOwner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12 col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12 col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.FollowUp, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FollowUp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FollowUp, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group col-lg-6 col-md-12 col-xs-12 col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.LeadStatusId, "LeadStatusId", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("LeadStatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LeadStatusId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.LeadSourceId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LeadSourceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeadSourceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.StageId, "StageId", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownList("StageId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StageId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.UserType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            @Html.LabelFor(model => model.Investmentid, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Investmentid, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Investmentid, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="clearfix"></div>
        <div class="form-group col-lg-6 col-md-12 col-xs-12">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
